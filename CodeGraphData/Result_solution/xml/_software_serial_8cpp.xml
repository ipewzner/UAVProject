<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_software_serial_8cpp" kind="file">
    <compoundname>SoftwareSerial.cpp</compoundname>
    <includes refid="_software_serial_8h" local="yes">SoftwareSerial.h</includes>
    <includes local="no">Arduino.h</includes>
    <incdepgraph>
      <node id="107">
        <label>atomic</label>
      </node>
      <node id="112">
        <label>functional</label>
      </node>
      <node id="111">
        <label>esp_attr.h</label>
      </node>
      <node id="104">
        <label>SoftwareSerial.h</label>
        <link refid="_software_serial_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>Arduino.h</label>
      </node>
      <node id="113">
        <label>cstddef</label>
      </node>
      <node id="103">
        <label>C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp</label>
        <link refid="SoftwareSerial.cpp"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>algorithm</label>
      </node>
      <node id="110">
        <label>Delegate.h</label>
        <link refid="_delegate_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>Stream.h</label>
      </node>
      <node id="108">
        <label>memory</label>
      </node>
      <node id="105">
        <label>circular_queue/circular_queue.h</label>
        <link refid="circular__queue_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_software_serial_8cpp_1a66927e14222fee5df65712b17884d9e4" prot="public" static="no">
        <name>xt_rsil</name>
        <param><defname>a</defname></param>
        <initializer>(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" line="27" column="9" bodyfile="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="class_software_serial_1aa674926759b375f43af50b40625284b9" compoundref="_software_serial_8cpp" startline="286" endline="308">SoftwareSerial::preciseDelay</referencedby>
        <referencedby refid="class_software_serial_1a496dc4a5268201657d0a80ab7444867f" compoundref="_software_serial_8cpp" startline="339" endline="425">SoftwareSerial::write</referencedby>
      </memberdef>
      <memberdef kind="define" id="_software_serial_8cpp_1a11b62e3dfd23945d78bffd3e8b79abaf" prot="public" static="no">
        <name>xt_wsr_ps</name>
        <param><defname>a</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" line="28" column="9" bodyfile="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="class_software_serial_1aa674926759b375f43af50b40625284b9" compoundref="_software_serial_8cpp" startline="286" endline="308">SoftwareSerial::preciseDelay</referencedby>
        <referencedby refid="class_software_serial_1a496dc4a5268201657d0a80ab7444867f" compoundref="_software_serial_8cpp" startline="339" endline="425">SoftwareSerial::write</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_software_serial_8cpp_1a598154fbc2ca9d498197580a562d42a0" prot="public" static="no" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t BYTE_ALL_BITS_SET</definition>
        <argsstring></argsstring>
        <name>BYTE_ALL_BITS_SET</name>
        <initializer>= ~static_cast&lt;uint8_t&gt;(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" line="31" column="1" bodyfile="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="class_software_serial_1aa94449265bf416821f66af79bae5b487" compoundref="_software_serial_8cpp" startline="482" endline="557">SoftwareSerial::rxBits</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">SoftwareSerial.cpp<sp/>-<sp/>Implementation<sp/>of<sp/>the<sp/>Arduino<sp/>software<sp/>serial<sp/>for<sp/>ESP8266/ESP32.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Copyright<sp/>(c)<sp/>2015-2016<sp/>Peter<sp/>Lerup.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(c)<sp/>2018-2019<sp/>Dirk<sp/>O.<sp/>Kaar.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment">modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment">License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment">version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment">Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment">License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment">Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_software_serial_8h" kindref="compound">SoftwareSerial.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ESP32</highlight></codeline>
<codeline lineno="27" refid="_software_serial_8cpp_1a66927e14222fee5df65712b17884d9e4" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>xt_rsil(a)<sp/>(a)</highlight></codeline>
<codeline lineno="28" refid="_software_serial_8cpp_1a11b62e3dfd23945d78bffd3e8b79abaf" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>xt_wsr_ps(a)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_software_serial_8cpp_1a598154fbc2ca9d498197580a562d42a0" refkind="member"><highlight class="normal">constexpr<sp/>uint8_t<sp/><ref refid="_software_serial_8cpp_1a598154fbc2ca9d498197580a562d42a0" kindref="member">BYTE_ALL_BITS_SET</ref><sp/>=<sp/>~static_cast&lt;uint8_t&gt;(0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_software_serial_1a50915f493f53d62e2fee6676ea0baf0e" refkind="member"><highlight class="normal"><ref refid="class_software_serial_1a50915f493f53d62e2fee6676ea0baf0e" kindref="member">SoftwareSerial::SoftwareSerial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a752d9191924d8ef51cfd8dc3d2118555" kindref="member">m_isrOverflow</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab22bb4aca8df42d47d2b272e20df8fe5" kindref="member">m_rxGPIOPullupEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_software_serial_1a9395625c3341ceedfc669f14ce43f8f1" refkind="member"><highlight class="normal"><ref refid="class_software_serial_1a50915f493f53d62e2fee6676ea0baf0e" kindref="member">SoftwareSerial::SoftwareSerial</ref>(int8_t<sp/>rxPin,<sp/>int8_t<sp/>txPin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a752d9191924d8ef51cfd8dc3d2118555" kindref="member">m_isrOverflow</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab22bb4aca8df42d47d2b272e20df8fe5" kindref="member">m_rxGPIOPullupEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref><sp/>=<sp/>rxPin;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref><sp/>=<sp/>txPin;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref><sp/>=<sp/>invert;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_software_serial_1af6b8fff282e09a6cecc5df669ae71ee7" refkind="member"><highlight class="normal"><ref refid="class_software_serial_1af6b8fff282e09a6cecc5df669ae71ee7" kindref="member">SoftwareSerial::~SoftwareSerial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a9034270f7de617b3cc7d3f38f3a8e0df" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_software_serial_1a2f4df40ea13d89ac519eaeaf1b55be45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a2f4df40ea13d89ac519eaeaf1b55be45" kindref="member">SoftwareSerial::isValidGPIOpin</ref>(int8_t<sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP8266)</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pin<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>16)<sp/>&amp;&amp;<sp/>!isFlashInterfacePin(pin);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ESP32)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>strapping<sp/>pins<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>datasheets,<sp/>they<sp/>affect<sp/>bootup<sp/>and<sp/>other<sp/>critical<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remmove<sp/>the<sp/>flash<sp/>memory<sp/>pins<sp/>on<sp/>related<sp/>devices,<sp/>since<sp/>using<sp/>these<sp/>causes<sp/>memory<sp/>access<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_IDF_TARGET_ESP32</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Datasheet<sp/>https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pinout<sp/><sp/><sp/><sp/>https://docs.espressif.com/projects/esp-idf/en/latest/esp32/_images/esp32-devkitC-v4-pinout.jpg<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pin<sp/>==<sp/>1)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>5)<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pin<sp/>&gt;=<sp/>12<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>15)<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!psramFound()<sp/>&amp;&amp;<sp/>pin<sp/>&gt;=<sp/>16<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>17)<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pin<sp/>&gt;=<sp/>18<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>19)<sp/>||</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pin<sp/>&gt;=<sp/>21<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>23)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>25<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>27)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>32<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>39);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>CONFIG_IDF_TARGET_ESP32S2</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Datasheet<sp/>https://www.espressif.com/sites/default/files/documentation/esp32-s2_datasheet_en.pdf,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pinout<sp/><sp/><sp/><sp/>https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/_images/esp32-s2_saola1-pinout.jpg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pin<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>21)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>33<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>44);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>CONFIG_IDF_TARGET_ESP32C3</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Datasheet<sp/>https://www.espressif.com/sites/default/files/documentation/esp32-c3_datasheet_en.pdf,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pinout<sp/><sp/><sp/><sp/>https://docs.espressif.com/projects/esp-idf/en/latest/esp32c3/_images/esp32-c3-devkitm-1-v1-pinout.jpg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pin<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>1)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>7)<sp/>||<sp/>(pin<sp/>&gt;=<sp/>18<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>21);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_software_serial_1ad908ffa7f2ad1f23d840c659a8c72004" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ad908ffa7f2ad1f23d840c659a8c72004" kindref="member">SoftwareSerial::isValidRxGPIOpin</ref>(int8_t<sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a2f4df40ea13d89ac519eaeaf1b55be45" kindref="member">isValidGPIOpin</ref>(pin)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP8266)</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pin<sp/>!=<sp/>16)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_software_serial_1aa28371fec8665a898c103eb4f23bf4d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1aa28371fec8665a898c103eb4f23bf4d8" kindref="member">SoftwareSerial::isValidTxGPIOpin</ref>(int8_t<sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a2f4df40ea13d89ac519eaeaf1b55be45" kindref="member">isValidGPIOpin</ref>(pin)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP32)</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_IDF_TARGET_ESP32</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pin<sp/>&lt;<sp/>34)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">#elif<sp/>CONFIG_IDF_TARGET_ESP32S2</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pin<sp/>&lt;=<sp/>45)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>CONFIG_IDF_TARGET_ESP32C3</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>restrictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_software_serial_1ac0f144a493b514e632972cc95d5ce30a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ac0f144a493b514e632972cc95d5ce30a" kindref="member">SoftwareSerial::hasRxGPIOPullUp</ref>(int8_t<sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ESP32)</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(pin<sp/>&gt;=<sp/>34<sp/>&amp;&amp;<sp/>pin<sp/>&lt;=<sp/>39);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>(void)pin;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_software_serial_1ac238cd1330d260018c92ee88ff793388" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ac238cd1330d260018c92ee88ff793388" kindref="member">SoftwareSerial::setRxGPIOPullUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>,<sp/><ref refid="class_software_serial_1ac0f144a493b514e632972cc95d5ce30a" kindref="member">hasRxGPIOPullUp</ref>(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1ab22bb4aca8df42d47d2b272e20df8fe5" kindref="member">m_rxGPIOPullupEnabled</ref><sp/>?<sp/>INPUT_PULLUP<sp/>:<sp/>INPUT);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_software_serial_1af32933c57afd661f992aaa4cd2300e3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1af32933c57afd661f992aaa4cd2300e3f" kindref="member">SoftwareSerial::begin</ref>(uint32_t<sp/>baud,<sp/><ref refid="_software_serial_8h_1a745882d151b2e7009f878e90ca8e1926" kindref="member">SoftwareSerialConfig</ref><sp/>config,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rxPin,<sp/>int8_t<sp/>txPin,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufCapacity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isrBufCapacity)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>!=<sp/>rxPin)<sp/><ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref><sp/>=<sp/>rxPin;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>!=<sp/>txPin)<sp/><ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref><sp/>=<sp/>txPin;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a5e160de610c89cafd2f348449c2bc717" kindref="member">m_oneWire</ref><sp/>=<sp/>(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref><sp/>==<sp/><ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref><sp/>=<sp/>invert;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>=<sp/>5<sp/>+<sp/>(config<sp/>&amp;<sp/>07);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127e" kindref="member">SoftwareSerialParity</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config<sp/>&amp;<sp/>070);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref><sp/>=<sp/>1<sp/>+<sp/>((config<sp/>&amp;<sp/>0300)<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>=<sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref>)<sp/>+<sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref><sp/>=<sp/>(ESP.getCpuFreqMHz()<sp/>*<sp/>1000000UL<sp/>+<sp/>baud<sp/>/<sp/>2)<sp/>/<sp/>baud;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1ad908ffa7f2ad1f23d840c659a8c72004" kindref="member">isValidRxGPIOpin</ref>(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>))<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcircular__queue" kindref="compound">circular_queue&lt;uint8_t&gt;</ref>((bufCapacity<sp/>&gt;<sp/>0)<sp/>?<sp/>bufCapacity<sp/>:<sp/>64));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcircular__queue" kindref="compound">circular_queue&lt;uint8_t&gt;</ref>((<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;capacity()<sp/>+<sp/>7)<sp/>/<sp/>8));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref><sp/>=<sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcircular__queue" kindref="compound">circular_queue&lt;uint32_t, SoftwareSerial*&gt;</ref>((isrBufCapacity<sp/>&gt;<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isrBufCapacity<sp/>:<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;capacity()<sp/>*<sp/>(2<sp/>+<sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref>))));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref><sp/>&amp;&amp;<sp/>(!<ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref><sp/>||<sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ac238cd1330d260018c92ee88ff793388" kindref="member">setRxGPIOPullUp</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1aa28371fec8665a898c103eb4f23bf4d8" kindref="member">isValidTxGPIOpin</ref>(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>))<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1829e0c4b2f1542057647dd0b7cddaa5" kindref="member">m_txValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a5e160de610c89cafd2f348449c2bc717" kindref="member">m_oneWire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>!<ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a764b3b1d19de097aa7ef5cc0a122ea5c" kindref="member">m_rxEnabled</ref>)<sp/>{<sp/><ref refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" kindref="member">enableRx</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_software_serial_1a9034270f7de617b3cc7d3f38f3a8e0df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a9034270f7de617b3cc7d3f38f3a8e0df" kindref="member">SoftwareSerial::end</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" kindref="member">enableRx</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1829e0c4b2f1542057647dd0b7cddaa5" kindref="member">m_txValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>.reset();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>.reset();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>.reset();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_software_serial_1ad78e846e05c88a7ad7b7733c5bb652c1" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_software_serial_1ad78e846e05c88a7ad7b7733c5bb652c1" kindref="member">SoftwareSerial::baudRate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP.getCpuFreqMHz()<sp/>*<sp/>1000000UL<sp/>/<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_software_serial_1a3fb0b021f92334d824c1b4af0283d763" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a3fb0b021f92334d824c1b4af0283d763" kindref="member">SoftwareSerial::setTransmitEnablePin</ref>(int8_t<sp/>txEnablePin)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1aa28371fec8665a898c103eb4f23bf4d8" kindref="member">isValidTxGPIOpin</ref>(txEnablePin))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a2bba95a3b99ec6ad7dae75ef67c3bff9" kindref="member">m_txEnableValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a62a65ba498a777fa7cf4d3a5dd266acf" kindref="member">m_txEnablePin</ref><sp/>=<sp/>txEnablePin;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_software_serial_1a62a65ba498a777fa7cf4d3a5dd266acf" kindref="member">m_txEnablePin</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a62a65ba498a777fa7cf4d3a5dd266acf" kindref="member">m_txEnablePin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a2bba95a3b99ec6ad7dae75ef67c3bff9" kindref="member">m_txEnableValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_software_serial_1ac5e03ef4dd10fe0fc87bb542bb2180b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ac5e03ef4dd10fe0fc87bb542bb2180b7" kindref="member">SoftwareSerial::enableIntTx</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_software_serial_1a1287e30c4f8970484432156dab15215d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a1287e30c4f8970484432156dab15215d" kindref="member">SoftwareSerial::enableRxGPIOPullup</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab22bb4aca8df42d47d2b272e20df8fe5" kindref="member">m_rxGPIOPullupEnabled</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ac238cd1330d260018c92ee88ff793388" kindref="member">setRxGPIOPullUp</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_software_serial_1a0f274a9e03e8e8407b386e1c0c5d785f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a0f274a9e03e8e8407b386e1c0c5d785f" kindref="member">SoftwareSerial::enableTx</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a1829e0c4b2f1542057647dd0b7cddaa5" kindref="member">m_txValid</ref><sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a5e160de610c89cafd2f348449c2bc717" kindref="member">m_oneWire</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" kindref="member">enableRx</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>!<ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ac238cd1330d260018c92ee88ff793388" kindref="member">setRxGPIOPullUp</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" kindref="member">enableRx</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a1de571b32ec24f287fc1771c5dc13206" kindref="member">SoftwareSerial::enableRx</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>=<sp/><ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>to<sp/>stop<sp/>bit<sp/>level<sp/>and<sp/>current<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a1868f73af366b47b7cf78b0cbc64226f" kindref="member">m_isrLastCycle</ref><sp/>=<sp/>(ESP.getCycleCount()<sp/>|<sp/>1)<sp/>^<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref><sp/>&gt;=<sp/>(ESP.getCpuFreqMHz()<sp/>*<sp/>1000000UL)<sp/>/<sp/>74880UL)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachInterruptArg(digitalPinToInterrupt(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_software_serial_1a133928510810889b4eae833991ef886b" kindref="member">rxBitISR</ref>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>CHANGE);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachInterruptArg(digitalPinToInterrupt(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_software_serial_1abd66e04e2830904e8fe7771da25e7e1d" kindref="member">rxBitSyncISR</ref>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref><sp/>?<sp/>RISING<sp/>:<sp/>FALLING);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detachInterrupt(digitalPinToInterrupt(<ref refid="class_software_serial_1a0e7debf800fe99699948f5e29677e127" kindref="member">m_rxPin</ref>));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a764b3b1d19de097aa7ef5cc0a122ea5c" kindref="member">m_rxEnabled</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_software_serial_1a02e0047c01211c5f642aa9cde120f506" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a02e0047c01211c5f642aa9cde120f506" kindref="member">SoftwareSerial::read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available())<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;pop();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0d5efb3c45a2488fc25e924a1575deb5" kindref="member">m_lastReadParity</ref><sp/>=<sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;peek()<sp/>&amp;<sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;pop();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_software_serial_1a66fbae42082cb3e5279795b9ed3c78a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a02e0047c01211c5f642aa9cde120f506" kindref="member">SoftwareSerial::read</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avail;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>(avail<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;pop_n(buffer,<sp/>size)))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avail<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;pop_n(buffer,<sp/>size);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!avail)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>parityBits<sp/>=<sp/>avail;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>&gt;&gt;=<sp/>1)<sp/>++parityBits;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(parityBits<sp/>%<sp/>8));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;pop_n(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>parityBits<sp/>/<sp/>8);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>avail;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_software_serial_1aa5727b29b83e10f6a75fb21aa16f1c7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1aa5727b29b83e10f6a75fb21aa16f1c7d" kindref="member">SoftwareSerial::readBytes</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref><sp/>||<sp/>!size)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>readCnt<sp/>=<sp/><ref refid="class_software_serial_1a02e0047c01211c5f642aa9cde120f506" kindref="member">read</ref>(&amp;buffer[count],<sp/>size<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>readCnt;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>size)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readCnt)<sp/>start<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>optimistic_yield(1000UL);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>start<sp/>&lt;<sp/>_timeout);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_software_serial_1a6ab80cf40722851837fba2822f4bf69d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a6ab80cf40722851837fba2822f4bf69d" kindref="member">SoftwareSerial::available</ref>()<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avail<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!avail)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimistic_yield(10000UL);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>avail;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_software_serial_1aa674926759b375f43af50b40625284b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_software_serial_1aa674926759b375f43af50b40625284b9" kindref="member">SoftwareSerial::preciseDelay</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sync)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sync)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reenable<sp/>interrupts<sp/>while<sp/>delaying<sp/>to<sp/>avoid<sp/>other<sp/>tasks<sp/>piling<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref>)<sp/>{<sp/><ref refid="_software_serial_8cpp_1a11b62e3dfd23945d78bffd3e8b79abaf" kindref="member">xt_wsr_ps</ref>(<ref refid="class_software_serial_1aa4cfb19906a25b1f8cc5400d2d3aa761" kindref="member">m_savedPS</ref>);<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expired<sp/>=<sp/>ESP.getCycleCount()<sp/>-<sp/><ref refid="class_software_serial_1ac441727d6145bcedfe4c976428bc972a" kindref="member">m_periodStart</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>remaining<sp/>=<sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref><sp/>-<sp/>expired;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>ms<sp/>=<sp/>remaining<sp/>/<sp/>1000L<sp/>/<sp/>ESP.getCpuFreqMHz();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ms<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(ms);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimistic_yield(10000UL);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ESP.getCycleCount()<sp/>-<sp/><ref refid="class_software_serial_1ac441727d6145bcedfe4c976428bc972a" kindref="member">m_periodStart</ref>)<sp/>&lt;<sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>interrupts<sp/>again<sp/>if<sp/>applicable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sync<sp/>&amp;&amp;<sp/>!<ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref>)<sp/>{<sp/><ref refid="class_software_serial_1aa4cfb19906a25b1f8cc5400d2d3aa761" kindref="member">m_savedPS</ref><sp/>=<sp/><ref refid="_software_serial_8cpp_1a66927e14222fee5df65712b17884d9e4" kindref="member">xt_rsil</ref>(15);<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ac441727d6145bcedfe4c976428bc972a" kindref="member">m_periodStart</ref><sp/>=<sp/>ESP.getCycleCount();</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_software_serial_1a66de2648548911db1f32b1d5dc9a6033" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_software_serial_1a66de2648548911db1f32b1d5dc9a6033" kindref="member">SoftwareSerial::writePeriod</ref>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dutyCycle,<sp/>uint32_t<sp/>offCycle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withStopBit)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1aa674926759b375f43af50b40625284b9" kindref="member">preciseDelay</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dutyCycle)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref><sp/>+=<sp/>dutyCycle;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offCycle<sp/>||<sp/>(withStopBit<sp/>&amp;&amp;<sp/>!<ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>))<sp/><ref refid="class_software_serial_1aa674926759b375f43af50b40625284b9" kindref="member">preciseDelay</ref>(!withStopBit<sp/>||<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offCycle)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a7431e1db92460b73f5f131570b82eb9e" kindref="member">m_txPin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref><sp/>+=<sp/>offCycle;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withStopBit<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>)<sp/><ref refid="class_software_serial_1aa674926759b375f43af50b40625284b9" kindref="member">preciseDelay</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">SoftwareSerial::write</ref>(uint8_t<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">write</ref>(&amp;byte,<sp/>1);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_software_serial_1a6551f852082e655e54207e3b20a6a733" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">SoftwareSerial::write</ref>(uint8_t<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>,<sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127e" kindref="member">SoftwareSerialParity</ref><sp/>parity)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">write</ref>(&amp;byte,<sp/>1,<sp/>parity);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_software_serial_1a377c493d0cb1699170f436612e9fb8c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">SoftwareSerial::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">write</ref>(buffer,<sp/>size,<sp/><ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="class_software_serial_1a496dc4a5268201657d0a80ab7444867f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_software_serial_1a470886f6618ebbde7e486ef532dfef1c" kindref="member">SoftwareSerial::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127e" kindref="member">SoftwareSerialParity</ref><sp/>parity)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();<sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a1829e0c4b2f1542057647dd0b7cddaa5" kindref="member">m_txValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a2bba95a3b99ec6ad7dae75ef67c3bff9" kindref="member">m_txEnableValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a62a65ba498a777fa7cf4d3a5dd266acf" kindref="member">m_txEnablePin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>bit:<sp/>if<sp/>inverted,<sp/>LOW,<sp/>otherwise<sp/>HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>!<ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dutyCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>interrupts<sp/>in<sp/>order<sp/>to<sp/>get<sp/>a<sp/>clean<sp/>transmit<sp/>timing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1aa4cfb19906a25b1f8cc5400d2d3aa761" kindref="member">m_savedPS</ref><sp/>=<sp/><ref refid="_software_serial_8cpp_1a66927e14222fee5df65712b17884d9e4" kindref="member">xt_rsil</ref>(15);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>dataMask<sp/>=<sp/>((1UL<sp/>&lt;&lt;<sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withStopBit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a370797e59a98478f296f5ea382332743" kindref="member">m_periodDuration</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ac441727d6145bcedfe4c976428bc972a" kindref="member">m_periodStart</ref><sp/>=<sp/>ESP.getCycleCount();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/>cnt<sp/>&lt;<sp/>size;<sp/>++cnt)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref><sp/>=<sp/>pgm_read_byte(buffer<sp/>+<sp/>cnt)<sp/>&amp;<sp/>dataMask;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>LSB<sp/>start-data-parity-stop<sp/>bit<sp/>pattern<sp/>into<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>bits:<sp/>HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>word<sp/>=<sp/>~0UL;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inverted<sp/>parity<sp/>bit,<sp/>performance<sp/>tweak<sp/>for<sp/>xor<sp/>all-bits-set<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parity<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>parityBit;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(parity)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127ea4279a22b73523fb6a318fe9d5e69da69" kindref="member">SWSERIAL_PARITY_EVEN</ref>:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>inverted,<sp/>so<sp/>use<sp/>odd<sp/>parity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>^=<sp/>parityBit<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>&amp;=<sp/>0xf;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/>(0x9669<sp/>&gt;&gt;<sp/>parityBit)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127eaf04d20adcfe86c4595cbef37b654f753" kindref="member">SWSERIAL_PARITY_ODD</ref>:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>inverted,<sp/>so<sp/>use<sp/>even<sp/>parity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>^=<sp/>parityBit<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>&amp;=<sp/>0xf;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/>(0x6996<sp/>&gt;&gt;<sp/>parityBit)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127eadb16a335d8588c34dd036b1fa75c51b7" kindref="member">SWSERIAL_PARITY_MARK</ref>:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_software_serial_8h_1a4e9cc1b2d947394ec5d207e0b528127ea759e4e69fc87e8a57da062fa33d89d29" kindref="member">SWSERIAL_PARITY_SPACE</ref>:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suppresses<sp/>warning<sp/>parityBit<sp/>uninitialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parityBit<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>^=<sp/>parityBit;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>&lt;&lt;=<sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>|=<sp/><ref refid="_8_u_a_v_project_8vsarduino_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>bit:<sp/>LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>)<sp/>word<sp/>=<sp/>~word;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pb<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>word<sp/>&amp;<sp/>(1UL<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pb<sp/>&amp;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a66de2648548911db1f32b1d5dc9a6033" kindref="member">writePeriod</ref>(dutyCycle,<sp/>offCycle,<sp/>withStopBit);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withStopBit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dutyCycle<sp/>=<sp/>offCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dutyCycle<sp/>+=<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offCycle<sp/>+=<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withStopBit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a66de2648548911db1f32b1d5dc9a6033" kindref="member">writePeriod</ref>(dutyCycle,<sp/>offCycle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a12349e74dbe04646d248e1ffcf4a4ce2" kindref="member">m_intTxEnabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>the<sp/>interrupt<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_software_serial_8cpp_1a11b62e3dfd23945d78bffd3e8b79abaf" kindref="member">xt_wsr_ps</ref>(<ref refid="class_software_serial_1aa4cfb19906a25b1f8cc5400d2d3aa761" kindref="member">m_savedPS</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a2bba95a3b99ec6ad7dae75ef67c3bff9" kindref="member">m_txEnableValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_software_serial_1a62a65ba498a777fa7cf4d3a5dd266acf" kindref="member">m_txEnablePin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="class_software_serial_1ad241830e1431e59513ea15239a31c6ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ad241830e1431e59513ea15239a31c6ec" kindref="member">SoftwareSerial::flush</ref>()<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;flush();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref><sp/>=<sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;flush();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_software_serial_1ac6d4d5dfbe05515bf23766e2c8abfd46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1ac6d4d5dfbe05515bf23766e2c8abfd46" kindref="member">SoftwareSerial::overflow</ref>()<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="class_software_serial_1ae85f8b5b8dc4aa5573ce5f07317a6a4f" kindref="member">m_overflow</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ae85f8b5b8dc4aa5573ce5f07317a6a4f" kindref="member">m_overflow</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_software_serial_1aa2cc17a2eb304cd350f5834450f8bd0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1aa2cc17a2eb304cd350f5834450f8bd0a" kindref="member">SoftwareSerial::peek</ref>()<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;peek();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)<sp/><ref refid="class_software_serial_1a0d5efb3c45a2488fc25e924a1575deb5" kindref="member">m_lastReadParity</ref><sp/>=<sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;peek()<sp/>&amp;<sp/><ref refid="class_software_serial_1a955a750826c5b5d3087694cc3b120564" kindref="member">m_parityOutPos</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">SoftwareSerial::rxBits</ref>()<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ESP8266</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a752d9191924d8ef51cfd8dc3d2118555" kindref="member">m_isrOverflow</ref>.<ref refid="classstd_1_1atomic_1a42b814248794e50dcfa7f7ed81dba19d" kindref="member">load</ref>())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ae85f8b5b8dc4aa5573ce5f07317a6a4f" kindref="member">m_overflow</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a752d9191924d8ef51cfd8dc3d2118555" kindref="member">m_isrOverflow</ref>.<ref refid="classstd_1_1atomic_1ac6187f3882863f0e3f65a7fbb8b04121" kindref="member">store</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a752d9191924d8ef51cfd8dc3d2118555" kindref="member">m_isrOverflow</ref>.exchange(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ae85f8b5b8dc4aa5573ce5f07317a6a4f" kindref="member">m_overflow</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>-&gt;for_each(<ref refid="class_software_serial_1a93346dd3cdab14198650857ca385a4e7" kindref="member">m_isrBufferForEachDel</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>stop<sp/>bit<sp/>can<sp/>go<sp/>undetected<sp/>if<sp/>leading<sp/>data<sp/>bits<sp/>are<sp/>at<sp/>same<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>there<sp/>was<sp/>also<sp/>no<sp/>next<sp/>start<sp/>bit<sp/>yet,<sp/>so<sp/>one<sp/>word<sp/>may<sp/>be<sp/>pending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>there<sp/>was<sp/>no<sp/>new<sp/>ISR<sp/>data<sp/>received<sp/>in<sp/>the<sp/>meantime,<sp/>inserting<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extraneous<sp/>stop<sp/>level<sp/>bit<sp/>out<sp/>of<sp/>sequence<sp/>breaks<sp/>rx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&gt;<sp/>-1<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&lt;<sp/><ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>detectionCycles<sp/>=<sp/>(<ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref><sp/>-<sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref>)<sp/>*<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a0ce79ee2c7888807c54b3d305c76812a" kindref="member">m_isrBuffer</ref>-&gt;available()<sp/>&amp;&amp;<sp/>ESP.getCycleCount()<sp/>-<sp/><ref refid="class_software_serial_1a1868f73af366b47b7cf78b0cbc64226f" kindref="member">m_isrLastCycle</ref><sp/>&gt;<sp/>detectionCycles)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Produce<sp/>faux<sp/>stop<sp/>bit<sp/>level,<sp/>prevents<sp/>start<sp/>bit<sp/>maldetection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle&apos;s<sp/>LSB<sp/>is<sp/>repurposed<sp/>for<sp/>the<sp/>level<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>(((<ref refid="class_software_serial_1a1868f73af366b47b7cf78b0cbc64226f" kindref="member">m_isrLastCycle</ref><sp/>+<sp/>detectionCycles)<sp/>|<sp/>1)<sp/>^<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="class_software_serial_1aa94449265bf416821f66af79bae5b487" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">SoftwareSerial::rxBits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t&amp;<sp/>isrCycle)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>(<ref refid="class_software_serial_1a1868f73af366b47b7cf78b0cbc64226f" kindref="member">m_isrLastCycle</ref><sp/>&amp;<sp/>1)<sp/>^<sp/><ref refid="class_software_serial_1aa46ced1af836d38c30a548adbee64938" kindref="member">m_invert</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>introduced<sp/>by<sp/>edge<sp/>value<sp/>in<sp/>LSB<sp/>of<sp/>isrCycle<sp/>is<sp/>negligible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>cycles<sp/>=<sp/>isrCycle<sp/>-<sp/><ref refid="class_software_serial_1a1868f73af366b47b7cf78b0cbc64226f" kindref="member">m_isrLastCycle</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isrLastCycle<sp/>=<sp/>isrCycle;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bits<sp/>=<sp/>cycles<sp/>/<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cycles<sp/>%<sp/><ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref><sp/>&gt;<sp/>(<ref refid="class_software_serial_1af3224f037c8e82442a37759e224d9682" kindref="member">m_bitCycles</ref><sp/>&gt;&gt;<sp/>1))<sp/>++bits;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bits<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>bit<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&gt;=<sp/>(<ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>leading<sp/>edge<sp/>of<sp/>start<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--bits;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&gt;=<sp/>-1<sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&lt;<sp/>(<ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>dataBits<sp/>=<sp/>min(bits,<sp/>static_cast&lt;uint8_t&gt;(<ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>-<sp/>1<sp/>-<sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref>));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>+=<sp/>dataBits;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>-=<sp/>dataBits;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab9654d8cb91c4f46d281d38c1f6521ec" kindref="member">m_rxCurByte</ref><sp/>&gt;&gt;=<sp/>dataBits;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level)<sp/>{<sp/><ref refid="class_software_serial_1ab9654d8cb91c4f46d281d38c1f6521ec" kindref="member">m_rxCurByte</ref><sp/>|=<sp/>(<ref refid="_software_serial_8cpp_1a598154fbc2ca9d498197580a562d42a0" kindref="member">BYTE_ALL_BITS_SET</ref><sp/>&lt;&lt;<sp/>(8<sp/>-<sp/>dataBits));<sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parity<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a9aaf2c0fe5773182da2f4c1ca1ef41db" kindref="member">m_parityMode</ref><sp/>&amp;&amp;<sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>==<sp/>(<ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--bits;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7229b30bcaacc05306bba4659df95582" kindref="member">m_rxCurParity</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>&lt;<sp/>(<ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--bits;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>==<sp/>(<ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref><sp/>-<sp/><ref refid="class_software_serial_1a323f264255634ce1c4e6b334e157757f" kindref="member">m_stopBits</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>received<sp/>value<sp/>in<sp/>the<sp/>buffer<sp/>unless<sp/>we<sp/>have<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>high<sp/>stop<sp/>bit<sp/>level,<sp/>discard<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab9654d8cb91c4f46d281d38c1f6521ec" kindref="member">m_rxCurByte</ref><sp/>&gt;&gt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>8<sp/>-<sp/><ref refid="class_software_serial_1abac2ff0b6e59f914ff29b018ae5e2503" kindref="member">m_dataBits</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;push(<ref refid="class_software_serial_1ab9654d8cb91c4f46d281d38c1f6521ec" kindref="member">m_rxCurByte</ref>))<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ae85f8b5b8dc4aa5573ce5f07317a6a4f" kindref="member">m_overflow</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a7229b30bcaacc05306bba4659df95582" kindref="member">m_rxCurParity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;pushpeek()<sp/>|=<sp/><ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;pushpeek()<sp/>&amp;=<sp/>~<ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref><sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a17bf17ca15b0915c2752be03dba49caa" kindref="member">m_parityBuffer</ref>-&gt;push();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7e70bc16ce9aa1a81f92d2797988e96b" kindref="member">m_parityInPos</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a28dbcdc9ec19d1fcd055489f6d8c7aee" kindref="member">m_rxCurBit</ref><sp/>=<sp/><ref refid="class_software_serial_1a0334fc601b825bb9ec4191acec0cacef" kindref="member">m_pduBits</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>to<sp/>0<sp/>is<sp/>important<sp/>for<sp/>masked<sp/>bit<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1ab9654d8cb91c4f46d281d38c1f6521ec" kindref="member">m_rxCurByte</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a7229b30bcaacc05306bba4659df95582" kindref="member">m_rxCurParity</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="class_software_serial_1a133928510810889b4eae833991ef886b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_software_serial_1a133928510810889b4eae833991ef886b" kindref="member">SoftwareSerial::rxBitISR</ref>(<ref refid="class_software_serial" kindref="compound">SoftwareSerial</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>curCycle<sp/>=<sp/>ESP.getCycleCount();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>digitalRead(self-&gt;m_rxPin);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>level<sp/>and<sp/>cycle<sp/>in<sp/>the<sp/>buffer<sp/>unless<sp/>we<sp/>have<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle&apos;s<sp/>LSB<sp/>is<sp/>repurposed<sp/>for<sp/>the<sp/>level<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;m_isrBuffer-&gt;push((curCycle<sp/>|<sp/>1U)<sp/>^<sp/>!level))<sp/>self-&gt;m_isrOverflow.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="class_software_serial_1abd66e04e2830904e8fe7771da25e7e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="class_software_serial_1abd66e04e2830904e8fe7771da25e7e1d" kindref="member">SoftwareSerial::rxBitSyncISR</ref>(<ref refid="class_software_serial" kindref="compound">SoftwareSerial</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start<sp/>=<sp/>ESP.getCycleCount();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>wait<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m_bitCycles<sp/>-<sp/>172U;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>level<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m_invert;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>level<sp/>and<sp/>cycle<sp/>in<sp/>the<sp/>buffer<sp/>unless<sp/>we<sp/>have<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle&apos;s<sp/>LSB<sp/>is<sp/>repurposed<sp/>for<sp/>the<sp/>level<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;m_isrBuffer-&gt;push(((start<sp/>+<sp/>wait)<sp/>|<sp/>1U)<sp/>^<sp/>!level))<sp/>self-&gt;m_isrOverflow.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m_pduBits;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ESP.getCycleCount()<sp/>-<sp/>start<sp/>&lt;<sp/>wait)<sp/>{};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait<sp/>+=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;m_bitCycles;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>level<sp/>and<sp/>cycle<sp/>in<sp/>the<sp/>buffer<sp/>unless<sp/>we<sp/>have<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle&apos;s<sp/>LSB<sp/>is<sp/>repurposed<sp/>for<sp/>the<sp/>level<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digitalRead(self-&gt;m_rxPin)<sp/>!=<sp/>level)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;m_isrBuffer-&gt;push(((start<sp/>+<sp/>wait)<sp/>|<sp/>1U)<sp/>^<sp/>level))<sp/>self-&gt;m_isrOverflow.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>!level;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="class_software_serial_1a403524f9df5f05696966c8df94a2300f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1a403524f9df5f05696966c8df94a2300f" kindref="member">SoftwareSerial::onReceive</ref>(<ref refid="class_delegate" kindref="compound">Delegate</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>available),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&gt;<sp/>handler)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a3729e009ea01d21540e014c34620a5d2" kindref="member">receiveHandler</ref><sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="class_software_serial_1aadf0277fea3c11d03298b13333b06eba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_software_serial_1aadf0277fea3c11d03298b13333b06eba" kindref="member">SoftwareSerial::perform_work</ref>()<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_software_serial_1a7f54905fedd809d8dcf4ecb891c20f39" kindref="member">m_rxValid</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_software_serial_1a623072eac9e17926d8f40f825703b12d" kindref="member">rxBits</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_software_serial_1a3729e009ea01d21540e014c34620a5d2" kindref="member">receiveHandler</ref>)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avail<sp/>=<sp/><ref refid="class_software_serial_1ad68e5c980e6d949f98e4aaef33661bd9" kindref="member">m_buffer</ref>-&gt;available();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avail)<sp/>{<sp/><ref refid="class_software_serial_1a3729e009ea01d21540e014c34620a5d2" kindref="member">receiveHandler</ref>(avail);<sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ipewz/Desktop/UAVProject/Libraries/espsoftwareserial-main/6.14.1/espsoftwareserial-main/src/SoftwareSerial.cpp"/>
  </compounddef>
</doxygen>
